name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   platform: linux-x86_64
          # - os: ubuntu-24.04-arm
          #   platform: linux-arm64
          - os: macos-latest
            platform: macos-arm64
          # - os: macos-latest-large
          #   platform: macos-x86_64

    runs-on: ${{ matrix.os }}

    outputs:
      artifacts: ${{ steps.collect-artifacts.outputs.artifacts }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Build project
        run: nix build .#default.lib

      - name: Find library file
        id: find-lib
        run: |
          cd result-lib/lib
          lib_file=""
          for file in *; do
            if [ -f "$file" ] && [ ! -L "$file" ]; then
              lib_file="$file"
              break
            fi
          done
          if [ -z "$lib_file" ]; then
            echo "No non-symlinked file found in result-lib/lib"
            exit 1
          fi
          echo "lib_file=$lib_file" >> $GITHUB_OUTPUT
          echo "Found library file: $lib_file"

      - name: Rename library file with platform
        run: |
          lib_file="./result-lib/lib/${{ steps.find-lib.outputs.lib_file }}"
          extension="${lib_file##*.}"
          version=$(cat .version)
          cp "$lib_file" "libgit2-$version-${{ matrix.platform }}.$extension"
          echo "Renamed $lib_file to $new_name"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: library-${{ matrix.platform }}
          path: ./*-${{ matrix.platform }}.*
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
